#!/usr/bin/env ruby

require "optparse"
require "chef"

# This hash will hold all of the options parsed from the command-line by OptionParser
options = {}

optparse = OptionParser.new do|opts|
    # Set a banner displayed at the top of the help screen
        opts.banner = "Usage: chef-roles-to-json.rb [options] role.rb"

            # This prints the json role to screen
                options[:verbose] = false
                    opts.on( '-v', '--verbose', 'Output json result' ) do
                            options[:verbose] = true
                                end

                                    # This displays the help screen
                                        opts.on( '-h', '--help', 'Display this help' ) do
                                                puts opts
                                                        exit
                                                           end
                                                           end

# Parse the command-line
optparse.parse!

if not ARGV[0] then
        puts optparse
            exit 1
            end

# Ruby role to convert
rb_file = ARGV[0]

if not File.file?(rb_file) then
        puts "Role #{ARGV[0]} not found"
            exit 1
            end

# Convert role
role = Chef::Role.new
role.from_file(rb_file)
json_file = rb_file.sub(/\.rb$/,'.json')
File.open(json_file, 'w'){|f| f.write(JSON.pretty_generate(role))}

# Print to screen if verbose
puts JSON.pretty_generate(role) if options[:verbose]

# Shamelessly forked from Tim Diggins gist https://gist.github.com/red56/834890
